{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { Error404Component } from './pages/error-404/error-404.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  component: Error404Component\n}];\nexport class ErrorRoutingModule {\n  static #_ = this.ɵfac = function ErrorRoutingModule_Factory(t) {\n    return new (t || ErrorRoutingModule)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: ErrorRoutingModule\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forChild(routes), RouterModule]\n  });\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ErrorRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","Error404Component","routes","path","component","ErrorRoutingModule","_","_2","_3","forChild","imports","i1","exports"],"sources":["/home/am-pc-16/ANGULAR/blog-angular-tailwind/frontend/src/app/modules/error/error.routing.module.ts"],"sourcesContent":["import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { Error404Component } from './pages/error-404/error-404.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Error404Component,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ErrorRoutingModule {}\n"],"mappings":"AAAA,SAASA,YAAY,QAAgB,iBAAiB;AAEtD,SAASC,iBAAiB,QAAQ,uCAAuC;;;AAEzE,MAAMC,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAEH;CACZ,CACF;AAMD,OAAM,MAAOI,kBAAkB;EAAA,QAAAC,CAAA,G;qBAAlBD,kBAAkB;EAAA;EAAA,QAAAE,EAAA,G;UAAlBF;EAAkB;EAAA,QAAAG,EAAA,G;cAHnBR,YAAY,CAACS,QAAQ,CAACP,MAAM,CAAC,EAC7BF,YAAY;EAAA;;;2EAEXK,kBAAkB;IAAAK,OAAA,GAAAC,EAAA,CAAAX,YAAA;IAAAY,OAAA,GAFnBZ,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}